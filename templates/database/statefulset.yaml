{{- if .Values.database.internal.enabled }}
{{- with .Values.database }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "liferay.fullname" $ }}-database
  labels:
    app: {{ $.Chart.Name }}-database
    {{- include "liferay.labels" $ | nindent 4 }}
spec:
  replicas: {{ .internal.replicaCount }}
  selector:
    matchLabels:
      app: {{ $.Chart.Name }}-database
      {{- include "liferay.selectorLabels" $ | nindent 6 }}
  serviceName: {{ include "liferay.fullname" $ }}-database
  template:
    metadata:
      labels:
        app: {{ $.Chart.Name }}-database
        {{- include "liferay.labels" $ | nindent 8 }}
    spec:
      {{- with .internal.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: {{ $.Chart.Name }}-database
        env:
        - name: POSTGRES_DB
          value: {{ .config.database }}
        - name: POSTGRES_PASSWORD
          value: {{ .config.password }}
        - name: POSTGRES_USER
          value: {{ .config.user }}
        - name: PGUSER
          value: {{ .config.user }}
        - name: PGDATA
          value: /var/lib/postgresql/data/db
        {{- with .internal.env }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        image: {{ printf "%s:%s" (default "database" .internal.image.repository) ((default "16" .internal.image.tag) | toString) }}
        imagePullPolicy: {{ $.Values.image.pullPolicy }}
        {{- with .internal.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        ports:
        - name: database
          containerPort: {{ default "5432" .config.port }}
          protocol: TCP
        {{- with .internal.readinessProbe }}
        readinessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .internal.resources }}
        resources:
          {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with .internal.startupProbe }}
        startupProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: {{ include "liferay.fullname" $ }}-database-pvc
      {{- with .internal.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .internal.initContainers -}}
      initContainers:
      {{ toYaml . | nindent 6 }}
      {{- end }}
      {{- with .internal.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .internal.schedulingGates }}
      schedulingGates:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "liferay.serviceAccountName" $ }}
      {{- with .internal.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: {{ include "liferay.fullname" $ }}-database-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ default "1Gi" .internal.storage}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "liferay.fullname" $ }}-database
  labels:
    app: {{ $.Chart.Name }}-database
    {{- include "liferay.labels" $ | nindent 4 }}
spec:
  selector:
    app: {{ $.Chart.Name }}-database
    {{- include "liferay.selectorLabels" $ | nindent 4 }}
  ports:
  - name: database
    port: {{ .config.port }}
    targetPort: database
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "liferay.fullname" $ }}-database-headless
  labels:
    app: {{ $.Chart.Name }}-database
    {{- include "liferay.labels" $ | nindent 4 }}
spec:
  clusterIP: None # This is what makes it headless
  selector:
    app: {{ $.Chart.Name }}-database
    {{- include "liferay.selectorLabels" $ | nindent 4 }}
  ports:
  - name: database
    port: {{ .config.port }}
    targetPort: database
    protocol: TCP
{{- end }}
{{- end }}
